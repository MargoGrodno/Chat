{
  "name": "espress",
  "version": "0.0.0",
  "description": "Express-inspired streaming-first web server",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/supershabam/espress"
  },
  "keywords": [
    "streaming",
    "websocket",
    "web"
  ],
  "author": {
    "name": "Ian Hansen"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/supershabam/espress/issues"
  },
  "homepage": "https://github.com/supershabam/espress",
  "readme": "# espress\n\nREST web servers are great, and then we add \"realtime\" to them and figure out how to munge long-lived streaming responses into our app.\n\nWhat if we had a client and server that treated streaming responses as first-class citizens?\n\nWhat if a simple request/response cycle was just a short-lived, single event streaming response?\n\nThis is a framework to build that system.\n\n## goals\n\n* WebSocket based\n* Use only one websocket\n* Multiplex requests/response\n\n## LICENSE\n\nMIT\n\n",
  "readmeFilename": "README.md",
  "_id": "espress@0.0.0",
  "dist": {
    "shasum": "6be3c6d3bff0bd6fb7bb6c3d557243b9c2a22f69",
    "tarball": "http://registry.npmjs.org/espress/-/espress-0.0.0.tgz"
  },
  "_from": "espress@*",
  "_npmVersion": "1.3.14",
  "_npmUser": {
    "name": "supershabam",
    "email": "ian@supershabam.com"
  },
  "maintainers": [
    {
      "name": "supershabam",
      "email": "ian@supershabam.com"
    }
  ],
  "directories": {},
  "_shasum": "6be3c6d3bff0bd6fb7bb6c3d557243b9c2a22f69",
  "_resolved": "https://registry.npmjs.org/espress/-/espress-0.0.0.tgz"
}
